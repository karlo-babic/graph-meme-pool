paths:
  init_memes: "init_memes.txt"
  graph_save_dir: "saved"
  graph_basename: "potato4_small_worlds"
  vis_dir: "vis"
  log_file: "simulation.log"

graph_generation:
  type: 'small_worlds'  # 'example' or 'small_world' or 'small_worlds'
  initial_meme_assignment: 'random'  # Assignment of memes to nodes: random or structured
  params:
    n: 20      # Nodes per group (for small_worlds) or total nodes (for small_world)
    k: 4       # Each node is joined with its k nearest neighbors in ring topology
    p: 0.3     # Probability of rewiring each edge (small_world/s)
    b: 0.7     # Probability of adding a backward edge
    g: 5       # Number of groups (for small_worlds)
    inter_p: 0.1 # Probability of inter-group connection (for small_worlds)

simulation:
  generations: 400
  threshold: 0.2  # Score ratio threshold for merge/mutate/keep decision
  initial_score: true  # Whether to score initial memes before first generation
  fitness_model_huggingpath: 'cardiffnlp/twitter-roberta-base-sentiment-latest'  # path to a model on huggingface (e.g. 'cardiffnlp/twitter-roberta-base-sentiment-latest'), or empty string ('') -> using LLM with prompt_score below

llm:
  huggingpath: "microsoft/Phi-3-mini-4k-instruct"
  # api_key: "YOUR_API_KEY"  # Optional: Add API key if needed for a certain model/API
  temperature_mutate: 0.5
  temperature_merge: 0.5
  temperature_score: 0.2
  max_new_tokens: 50
  prompt_mutate: |
    I will modify the following text with a minimal change, ensuring that its meaning, sentiment, and approximate word count remain intact.
    I will output only the modified text (as a single sentence), starting with "<modified text>" and ending with "</modified text>".
  prompt_merge: |
    I will very sligtly nudge text1 to be semantically closer to text2, while still being very similar to text1.
    The final text cannot exceed the length of the text1, so I will keep it very short.
    I will output only the new text (as a single sentence), starting with "<new text>" and ending with "</new text>".
  prompt_score: |
    The text is rigorously evaluated for virality on a strict 0 to 9 scale based on these criteria:
    - Immediate attention-grabbing appeal
    - Strong emotional response or high relatability
    - Clear and concise messaging, easy to share and understand
    - High potential for discussion, controversy, or widespread interest
    Rating Scale Guidelines:
    9 Exceptional: Highly shareable, evokes strong emotions, and sparks conversation instantly.
    8 Outstanding: Compelling, emotionally engaging, and likely to be widely spread.
    7 Excellent: Strongly resonates with audiences, though slightly less universally viral.
    6 Strong: Attention-grabbing and interesting but not overwhelmingly shareable.
    5 Good: Holds interest and has some viral potential but lacks a strong hook.
    4 Acceptable: Somewhat engaging but unlikely to gain significant traction.
    3 Weak: Passable but lacks the elements needed for virality.
    2 Poor: Struggles to generate interest or lacks clear viral appeal.
    1 Very Poor: Unlikely to be shared due to weak impact or unclear messaging.
    0 Non-viral: Completely fails to capture attention or interest.

embeddings:
  model_path: "bert-base-uncased" # For general embeddings
  sentence_model_path: "bert-base-uncased" # For semantic difference (SentenceTransformer compatible)

visualization:
  # Per-generation plots
  draw_change_per_gen: false
  draw_score_per_gen: false
  draw_semantic_diff_per_gen: false
  # Final plots
  draw_final_embs: true
  plot_final_score_history: true
  plot_semantic_drift: true
  plot_semantic_centroid_distance_drift: true
  # Plot settings
  node_min_size: 20
  node_max_size: 400
  edge_base_thickness: 1.0
  edge_base_opacity: 0.5
  label_max_len: 64
  dpi: 150

seed: 1

logging:
  level: "INFO" # Levels: DEBUG, INFO, WARNING, ERROR, CRITICAL